#!/usr/bin/python -u
import logging
import logging.handlers
from app.interval import Interval
from app.hot_water_pump import HotWaterPumpDevice, HotWaterPumpLib
from datetime import datetime
import pytz


__author__ = "Richard Kubicek"
__copyright__ = "Copyright 21"
__credits__ = ["Richard Kubicek"]
__license__ = "Proprietary"
__version__ = "{{$APPVERSION$}}"  # generated by build script
__maintainer__ = "Richard Kubicek"
__email__ = "rici.kubicek@gmail.com"

logging.getLogger('eledio').setLevel(logging.INFO)


if __name__ == "__main__":
    pump = HotWaterPumpDevice()
    pump_lib = HotWaterPumpLib(pump.config)
    rundown = None
    logger = logging.getLogger(self.__class__.__name__)

    while True:
        # load state of inputs and outputs
        pump.eledio.load_inputs()

        tz = pytz.timezone('Europe/Prague')
        t = datetime.now(tz)

        if pump_lib.check_time_mask(t):
            pump.eledio["pump"] = True
        elif not pump.eledio["flowSwitch"]:
            rundown = Interval(pump.config["rundown"]*60*60)
            pump.eledio["pump"] = True
            logger.debug("Flow activated!!!")

        if rundown.is_expired:
            pump.eledio["pump"] = False

        # apply final value to hardware
        pump.eledio.store_outputs()

        # do something else or wait some time
        pump.eledio.wait_events(3.0)
